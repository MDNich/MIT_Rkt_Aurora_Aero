# encoding: utf-8
# 2024 R2
SetScriptVersion(Version="24.2.133")
system1 = GetSystem(Name="ACP-Pre")
geometry1 = system1.GetContainer(ComponentName="Geometry")
geometry1.SetFile(FilePath="Z:/Developer/MIT_Rkt_Team/MIT_Rkt_Aurora_Aero/MIT_Rkt_Aurora_Aero/finFEA/finJust.scdoc")
Update()
model1 = system1.GetContainer(ComponentName="Model")
model1.Edit()
Save(Overwrite=True)
setup1 = system1.GetContainer(ComponentName="Setup")
setup1.Refresh(
    KeepACPOpen=True,
    BatchMode=False)
ACP.RefreshAPDLMaterial(
    Container=setup1,
    apdlMatFilePath=r"Z:\Developer\MIT_Rkt_Team\MIT_Rkt_Aurora_Aero\MIT_Rkt_Aurora_Aero\finFEA\wspc_FEA_files\dp0\ACP-Pre\ACP\material.apdl")
setup1.StartACP(ACPMode="pre")
setup1.ExitACP(Save=True)
model1.Edit()
Save(Overwrite=True)
Update()
model1.Edit()
Save(Overwrite=True)
Update()
setup1.StartACP(ACPMode="pre")
Parameters.SetDesignPointsOutOfDate()
engineeringData1 = system1.GetContainer(ComponentName="Engineering Data")
Parameters.SetRetainedDesignPointDataInvalid(InvalidContainers=[engineeringData1, geometry1, model1, setup1])
setupComponent1 = system1.GetComponent(Name="Setup")
MarkComponentsOutOfDateForDps(Components=[setupComponent1])
Parameters.SetPartiallyRetainedDataInvalid(Containers=[setup1])
favorites1 = EngData.LoadFavoriteItems()
library1 = EngData.OpenLibrary(
    Name="ANSYS GRANTA Materials Data for Simulation (Sample)",
    Source="Granta_Design_Typical_Materials.xml")
library2 = EngData.OpenLibrary(
    Name="Composite Materials",
    Source="Composite_Materials.xml")
matl1 = engineeringData1.ImportMaterial(
    Name="Epoxy Carbon Woven (230 GPa) Wet",
    Source="Composite_Materials.xml")
modelComponent1 = system1.GetComponent(Name="Model")
modelComponent1.Refresh()
modelComponent1.Update(AllDependencies=True)
setup1.ExitACP(Save=True)
setup1.Refresh(
    KeepACPOpen=True,
    BatchMode=False)
setup1.StartACP(ACPMode="pre")
Save(Overwrite=True)
setup1.ExitACP(Save=True)
model1.Exit()
geometry1.Edit(IsSpaceClaimGeometry=True)
Save(Overwrite=True)
Save(Overwrite=True)
geometry1.Exit()
modelComponent1.Refresh()
model1.Edit()
model1.Exit()
modelComponent1.Clean()
geometry1.SetFile(
    FilePath="Z:/Developer/MIT_Rkt_Team/MIT_Rkt_Aurora_Aero/MIT_Rkt_Aurora_Aero/finFEA/finJust_USETHIS.scdoc",
    PlugInName="SpaceClaim[25244]")
geometry1.Edit(IsSpaceClaimGeometry=True)
modelComponent1.Refresh()
model1.Edit()
Save(Overwrite=True)
model1.Edit()
Update()
setup1.StartACP(ACPMode="pre")
setup1.Refresh(
    KeepACPOpen=True,
    BatchMode=False)
setup1.ExitACP(Save=True)
setup1.StartACP(ACPMode="pre")
setup1.ExitACP(Save=True)
model1.Exit()
geometry1.Exit()
geometry1.Edit(IsSpaceClaimGeometry=True)
geometry1.Exit()
Update()
setup1.StartACP(ACPMode="pre")
Parameters.SetDesignPointsOutOfDate()
Parameters.SetRetainedDesignPointDataInvalid(InvalidContainers=[engineeringData1, geometry1, model1, setup1])
MarkComponentsOutOfDateForDps(Components=[setupComponent1])
Parameters.SetPartiallyRetainedDataInvalid(Containers=[setup1])
Save(Overwrite=True)
setup1.ExitACP(Save=True)
setup1.StartACP(ACPMode="pre")
Parameters.SetDesignPointsOutOfDate()
Parameters.SetRetainedDesignPointDataInvalid(InvalidContainers=[engineeringData1, geometry1, model1, setup1])
MarkComponentsOutOfDateForDps(Components=[setupComponent1])
Parameters.SetPartiallyRetainedDataInvalid(Containers=[setup1])
template1 = GetTemplate(
    TemplateName="Static Structural",
    Solver="ANSYS")
system2 = template1.CreateSystem(
    Position="Right",
    RelativeTo=system1)
modelComponent2 = system2.GetComponent(Name="Model")
setupComponent1.TransferSpecificData(
    TransferDataName="EnhancedModelData",
    TargetComponent=modelComponent2)
Save(Overwrite=True)
setup1.ExitACP(Save=True)
setupComponent1.Update(AllDependencies=True)
template2 = GetTemplate(TemplateName="Mechanical Model")
system3 = template2.CreateSystem()
geometry2 = system3.GetContainer(ComponentName="Geometry")
geometry2.SetFile(FilePath="Z:/Developer/MIT_Rkt_Team/MIT_Rkt_Aurora_Aero/MIT_Rkt_Aurora_Aero/finFEA/finJust_USETHIS.scdoc")
geometry2.Edit(IsSpaceClaimGeometry=True)
Save(Overwrite=True)
geometry2.Exit()
modelComponent3 = system3.GetComponent(Name="Model")
modelComponent3.Refresh()
model2 = system3.GetContainer(ComponentName="Model")
model2.Edit()
Save(Overwrite=True)
model2.Exit()
modelComponent3.TransferData(TargetComponent=modelComponent2)
modelComponent2.Refresh()
system3.Delete()
modelComponent2.Refresh()
model3 = system2.GetContainer(ComponentName="Model")
model3.Edit()
setup2 = system2.GetContainer(ComponentName="Setup")
setup2.Edit()
model3.Exit()
system4 = template2.CreateSystem()
geometry3 = system4.GetContainer(ComponentName="Geometry")
geometry3.Edit(IsSpaceClaimGeometry=True)
Save(Overwrite=True)
geometry3.Exit()
geometry3.SetFile(FilePath="Z:/Developer/MIT_Rkt_Team/MIT_Rkt_Aurora_Aero/MIT_Rkt_Aurora_Aero/finFEA/bonding.STEP")
modelComponent4 = system4.GetComponent(Name="Model")
modelComponent4.Refresh()
model4 = system4.GetContainer(ComponentName="Model")
model4.Edit()
Save(Overwrite=True)
Save(Overwrite=True)
model4.Exit()
modelComponent4.TransferData(TargetComponent=modelComponent2)
modelComponent2.Refresh()
geometry1.SetFile(FilePath="Z:/Developer/MIT_Rkt_Team/MIT_Rkt_Aurora_Aero/MIT_Rkt_Aurora_Aero/finFEA/bonding.STEP")
modelComponent1.Refresh()
model1.Edit()
model1.Exit()
geometry1.SetFile(FilePath="Z:/Developer/MIT_Rkt_Team/MIT_Rkt_Aurora_Aero/MIT_Rkt_Aurora_Aero/finFEA/bonding_COMPLETE.scdoc")
modelComponent1.Refresh()
model1.Edit()
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
model1.Exit()
modelComponent1.Update(AllDependencies=True)
setup1.Refresh(
    KeepACPOpen=True,
    BatchMode=False)
Parameters.SetDesignPointsOutOfDate()
solution1 = system2.GetContainer(ComponentName="Solution")
results1 = system2.GetContainer(ComponentName="Results")
Parameters.SetRetainedDesignPointDataInvalid(InvalidContainers=[engineeringData1, geometry1, model1, setup1, model3, setup2, solution1, results1])
setupComponent2 = system2.GetComponent(Name="Setup")
solutionComponent1 = system2.GetComponent(Name="Solution")
resultsComponent1 = system2.GetComponent(Name="Results")
MarkComponentsOutOfDateForDps(Components=[setupComponent1, modelComponent2, setupComponent2, solutionComponent1, resultsComponent1])
Parameters.SetPartiallyRetainedDataInvalid(Containers=[setup1, model3, setup2, solution1, results1])
setup1.StartACP(ACPMode="pre")
Save(Overwrite=True)
setup1.ExitACP(Save=True)
setupComponent1.Update(AllDependencies=True)
geometry3.SetFile(
    FilePath="Z:/Developer/MIT_Rkt_Team/MIT_Rkt_Aurora_Aero/MIT_Rkt_Aurora_Aero/finFEA/bonding_COMPLETE_3.scdoc",
    PlugInName="SpaceClaim[888]")
geometry3.Edit(IsSpaceClaimGeometry=True)
Save(Overwrite=True)
modelComponent4.Refresh()
model4.Edit()
Save(Overwrite=True)
model4.Exit()
modelComponent4.Refresh()
modelComponent4.Update(AllDependencies=True)
modelComponent2.Refresh()
model3.Edit()
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
model3.Exit()
engineeringDataComponent1 = system4.GetComponent(Name="Engineering Data")
engineeringDataComponent2 = system1.GetComponent(Name="Engineering Data")
engineeringDataComponent1.ReplaceWithShare(
    TargetSystem=system4,
    ComponentToShare=engineeringDataComponent2,
    SourceSystem=system1)
model3.Edit()
model3.Exit()
modelComponent4.Refresh()
model4.Edit()
Save(Overwrite=True)
model4.Exit()
modelComponent4.Update(AllDependencies=True)
model4.Edit()
Save(Overwrite=True)
model4.Exit()
Update()
model3.Edit()
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
model3.Exit()
geometry1.Edit(IsSpaceClaimGeometry=True)
geometry3.Exit()
geometry1.Exit()
model3.Edit()
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
model3.Exit()
Save(Overwrite=True)
modelComponent2.Update(AllDependencies=True)
Save(Overwrite=True)
