# encoding: utf-8
# 2024 R2
SetScriptVersion(Version="24.2.133")
Save(Overwrite=True)
Save(Overwrite=True)
Update()
system1 = GetSystem(Name="ACP-Pre")
model1 = system1.GetContainer(ComponentName="Model")
model1.Edit()
Save(Overwrite=True)
Save(Overwrite=True)
modelComponent1 = system1.GetComponent(Name="Model")
modelComponent1.Update(AllDependencies=True)
setup1 = system1.GetContainer(ComponentName="Setup")
setup1.Refresh(
    KeepACPOpen=True,
    BatchMode=False)
setup1.StartACP(ACPMode="pre")
Save(Overwrite=True)
setupComponent1 = system1.GetComponent(Name="Setup")
setupComponent1.Update(AllDependencies=True)
geometry1 = system1.GetContainer(ComponentName="Geometry")
geometry1.Edit(IsSpaceClaimGeometry=True)
geometry1.Exit()
system2 = GetSystem(Name="SYS 1")
geometry2 = system2.GetContainer(ComponentName="Geometry")
geometry2.SetFile(FilePath="C:/Users/mdn/Desktop/tmp/finJust.scdoc")
model2 = system2.GetContainer(ComponentName="Model")
model2.Edit()
modelComponent2 = system2.GetComponent(Name="Model")
modelComponent2.Refresh()
model2.Edit()
geometry2.Edit(IsSpaceClaimGeometry=True)
model2.Exit()
geometry2.Exit()
geometry2.SetFile(FilePath="C:/Users/mdn/Desktop/tmp/finJust_USETHIS.scdoc")
geometry2.SetFile(FilePath="C:/Users/mdn/Desktop/tmp/finJust_2.scdoc")
geometry2.Edit(IsSpaceClaimGeometry=True)
geometry2.Exit()
geometry2.Edit(IsSpaceClaimGeometry=True)
geometry2.Exit()
geometry2.Edit(IsSpaceClaimGeometry=True)
geometry2.Exit()
geometry2.Edit(IsSpaceClaimGeometry=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
modelComponent2.Refresh()
model2.Edit()
model2.Exit()
Save(Overwrite=True)
modelComponent2.Refresh()
model2.Edit()
model2.Exit()
Save(Overwrite=True)
modelComponent2.Refresh()
model2.Edit()
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
modelComponent2.Update(AllDependencies=True)
system3 = GetSystem(Name="SYS")
modelComponent3 = system3.GetComponent(Name="Model")
modelComponent3.Clean()
system3.Delete()
template1 = GetTemplate(
    TemplateName="Static Structural",
    Solver="ANSYS")
system4 = template1.CreateSystem(
    Position="Right",
    RelativeTo=system2)
engineeringDataComponent1 = system4.GetComponent(Name="Engineering Data")
engineeringDataComponent2 = system2.GetComponent(Name="Engineering Data")
engineeringDataComponent1.ReplaceWithShare(
    TargetSystem=system4,
    ComponentToShare=engineeringDataComponent2,
    SourceSystem=system2)
modelComponent4 = system4.GetComponent(Name="Model")
setupComponent1.TransferSpecificData(
    TransferDataName="EnhancedModelData",
    TargetComponent=modelComponent4)
engineeringDataComponent1.DeleteShare(System=system4)
setupComponent1.TransferSpecificData(
    TransferDataName="EnhancedModelData",
    TargetComponent=modelComponent4)
modelComponent2.TransferData(TargetComponent=modelComponent4)
modelComponent4.Refresh()
model3 = system4.GetContainer(ComponentName="Model")
model3.Edit()
model3.Exit()
geometry1.SetFile(FilePath="C:/Users/mdn/Desktop/tmp/finJust_2.scdoc")
model2.Exit()
modelComponent1.Refresh()
model1.Edit()
model2.Edit()
model2.Exit()
model1.Exit()
geometry1.SetFile(
    FilePath="C:/Users/mdn/Desktop/tmp/FinFEA_CDR_Correct_files/THERIGHTFINFILE.scdoc",
    PlugInName="SpaceClaim[11116]")
geometry1.Edit(IsSpaceClaimGeometry=True)
modelComponent1.Refresh()
model1.Edit()
Save(Overwrite=True)
Save(Overwrite=True)
modelComponent1.Update(AllDependencies=True)
setup1.Refresh(
    KeepACPOpen=True,
    BatchMode=False)
Parameters.SetDesignPointsOutOfDate()
engineeringData1 = system1.GetContainer(ComponentName="Engineering Data")
setup2 = system4.GetContainer(ComponentName="Setup")
solution1 = system4.GetContainer(ComponentName="Solution")
results1 = system4.GetContainer(ComponentName="Results")
Parameters.SetRetainedDesignPointDataInvalid(InvalidContainers=[engineeringData1, geometry2, model2, geometry1, model1, setup1, model3, setup2, solution1, results1])
setupComponent2 = system4.GetComponent(Name="Setup")
solutionComponent1 = system4.GetComponent(Name="Solution")
resultsComponent1 = system4.GetComponent(Name="Results")
MarkComponentsOutOfDateForDps(Components=[setupComponent1, modelComponent4, setupComponent2, solutionComponent1, resultsComponent1])
Parameters.SetPartiallyRetainedDataInvalid(Containers=[setup1, model3, setup2, solution1, results1])
setup1.StartACP(ACPMode="pre")
Save(Overwrite=True)
setupComponent1.Update(AllDependencies=True)
modelComponent4.Refresh()
model3.Edit()
model3.Edit()
Save(Overwrite=True)
model3.Exit()
model3.Edit()
model3.Exit()
modelComponent4.Clean()
model3.Edit()
system4.Delete()
system5 = template1.CreateSystem(
    Position="Right",
    RelativeTo=system2)
model1.Exit()
geometry2.Exit()
geometry1.Exit()
modelComponent5 = system5.GetComponent(Name="Model")
modelComponent2.TransferData(TargetComponent=modelComponent5)
setupComponent1.TransferSpecificData(
    TransferDataName="EnhancedModelData",
    TargetComponent=modelComponent5)
modelComponent5.Refresh()
model4 = system5.GetContainer(ComponentName="Model")
model4.Edit()
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
model4.Exit()
setup1.ExitACP(Save=True)
Save(Overwrite=True)
solution2 = system5.GetContainer(ComponentName="Solution")
solution2.Edit()
results2 = system5.GetContainer(ComponentName="Results")
results2.Edit()
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
model4.Exit()
system2.Delete()
geometry1.Edit(IsSpaceClaimGeometry=True)
Save(Overwrite=True)
Save(Overwrite=True)
geometry1.Exit()
geometry1.Edit(IsSpaceClaimGeometry=True)
modelComponent1.Refresh()
model1.Edit()
Save(Overwrite=True)
Save(Overwrite=True)
model1.Exit()
geometry1.Exit()
modelComponent1.Update(AllDependencies=True)
setup1.Refresh(
    KeepACPOpen=True,
    BatchMode=False)
Parameters.SetDesignPointsOutOfDate()
setup3 = system5.GetContainer(ComponentName="Setup")
Parameters.SetRetainedDesignPointDataInvalid(InvalidContainers=[engineeringData1, geometry1, model1, setup1, model4, setup3, solution2, results2])
setupComponent3 = system5.GetComponent(Name="Setup")
solutionComponent2 = system5.GetComponent(Name="Solution")
resultsComponent2 = system5.GetComponent(Name="Results")
MarkComponentsOutOfDateForDps(Components=[setupComponent1, modelComponent5, setupComponent3, solutionComponent2, resultsComponent2])
Parameters.SetPartiallyRetainedDataInvalid(Containers=[setup1, model4, setup3, solution2, results2])
setup1.StartACP(ACPMode="pre")
setup1.ExitACP(Save=True)
model1.Edit()
Save(Overwrite=True)
model1.Exit()
setupComponent1.Update(AllDependencies=True)
modelComponent5.Refresh()
model4.Edit()
Save(Overwrite=True)
setup1.StartACP(ACPMode="pre")
Save(Overwrite=True)
setup1.ExitACP(Save=True)
model1.Edit()
Save(Overwrite=True)
model1.Exit()
setupComponent1.Update(AllDependencies=True)
modelComponent5.Refresh()
model4.Edit()
model4.Exit()
setup1.StartACP(ACPMode="pre")
Parameters.SetDesignPointsOutOfDate()
Parameters.SetRetainedDesignPointDataInvalid(InvalidContainers=[engineeringData1, geometry1, model1, setup1, model4, setup3, solution2, results2])
MarkComponentsOutOfDateForDps(Components=[setupComponent1, modelComponent5, setupComponent3, solutionComponent2, resultsComponent2])
Parameters.SetPartiallyRetainedDataInvalid(Containers=[setup1, model4, setup3, solution2, results2])
setup1.ExitACP(Save=True)
setupComponent1.Update(AllDependencies=True)
modelComponent5.Refresh()
model4.Edit()
model4.Exit()
setup1.StartACP(ACPMode="pre")
Parameters.SetDesignPointsOutOfDate()
Parameters.SetRetainedDesignPointDataInvalid(InvalidContainers=[engineeringData1, geometry1, model1, setup1, model4, setup3, solution2, results2])
MarkComponentsOutOfDateForDps(Components=[setupComponent1, modelComponent5, setupComponent3, solutionComponent2, resultsComponent2])
Parameters.SetPartiallyRetainedDataInvalid(Containers=[setup1, model4, setup3, solution2, results2])
setup1.ExitACP(Save=True)
Update()
model4.Edit()
results2.Edit()
system6 = template1.CreateSystem(
    Position="Right",
    RelativeTo=system5)
modelComponent6 = system6.GetComponent(Name="Model")
modelComponent1.TransferData(TargetComponent=modelComponent6)
modelComponent6.Refresh()
setup1.StartACP(ACPMode="pre")
Parameters.SetDesignPointsOutOfDate()
Parameters.SetRetainedDesignPointDataInvalid(InvalidContainers=[engineeringData1, geometry1, model1, setup1, model4, setup3, solution2, results2])
MarkComponentsOutOfDateForDps(Components=[setupComponent1, modelComponent5, setupComponent3, solutionComponent2, resultsComponent2])
Parameters.SetPartiallyRetainedDataInvalid(Containers=[setup1, model4, setup3, solution2, results2])
model4.Exit()
system6.Delete()
Update()
model4.Edit()
Parameters.SetDesignPointsOutOfDate()
Parameters.SetRetainedDesignPointDataInvalid(InvalidContainers=[engineeringData1, geometry1, model1, setup1, model4, setup3, solution2, results2])
MarkComponentsOutOfDateForDps(Components=[setupComponent1, modelComponent5, setupComponent3, solutionComponent2, resultsComponent2])
Parameters.SetPartiallyRetainedDataInvalid(Containers=[setup1, model4, setup3, solution2, results2])
model4.Exit()
model4.Edit()
setupComponent1.Update(AllDependencies=True)
model4.Exit()
modelComponent5.Refresh()
model4.Edit()
model4.Exit()
Parameters.SetDesignPointsOutOfDate()
Parameters.SetRetainedDesignPointDataInvalid(InvalidContainers=[engineeringData1, geometry1, model1, setup1, model4, setup3, solution2, results2])
MarkComponentsOutOfDateForDps(Components=[setupComponent1, modelComponent5, setupComponent3, solutionComponent2, resultsComponent2])
Parameters.SetPartiallyRetainedDataInvalid(Containers=[setup1, model4, setup3, solution2, results2])
Update()
results2.Edit()
setup1.ExitACP(Save=True)
model4.Exit()
Save(Overwrite=True)
template2 = GetTemplate(
    TemplateName="ACP",
    Solver="Pre")
system7 = template2.CreateSystem()
system8 = template1.CreateSystem(
    Position="Right",
    RelativeTo=system7)
setupComponent4 = system7.GetComponent(Name="Setup")
modelComponent7 = system8.GetComponent(Name="Model")
setupComponent4.TransferData(TargetComponent=modelComponent7)
engineeringDataComponent3 = system7.GetComponent(Name="Engineering Data")
engineeringDataComponent4 = system1.GetComponent(Name="Engineering Data")
engineeringDataComponent3.ReplaceWithShare(
    TargetSystem=system7,
    ComponentToShare=engineeringDataComponent4,
    SourceSystem=system1)
system9 = system1.Duplicate(
    ComponentsToShare=[],
    RelativeTo=system1)
system9.Delete()
geometry3 = system7.GetContainer(ComponentName="Geometry")
geometry3.SetFile(
    FilePath="C:/Users/mdn/Desktop/tmp/newModel.SLDPRT",
    PlugInName="SOLIDWORKS[368]")
geometry3.Edit(IsSpaceClaimGeometry=True)
Save(Overwrite=True)
geometry3.Exit()
modelComponent8 = system7.GetComponent(Name="Model")
modelComponent8.Refresh()
model5 = system7.GetContainer(ComponentName="Model")
model5.Edit()
model1.Edit()
model5.Exit()
model5.Edit()
Save(Overwrite=True)
Save(Overwrite=True)
modelComponent8.Update(AllDependencies=True)
setup4 = system7.GetContainer(ComponentName="Setup")
setup4.Refresh(
    KeepACPOpen=True,
    BatchMode=False)
ACP.RefreshAPDLMaterial(
    Container=setup4,
    apdlMatFilePath=r"C:\Users\mdn\Desktop\tmp\FinFEA_CDR_Correct_files\dp0\ACP-Pre-1\ACP\material.apdl")
setup4.StartACP(ACPMode="pre")
setup1.StartACP(ACPMode="pre")
Save(Overwrite=True)
setup4.ExitACP(Save=True)
setup1.ExitACP(Save=True)
model5.Edit()
Save(Overwrite=True)
modelComponent8.Update(AllDependencies=True)
setup4.Refresh(
    KeepACPOpen=True,
    BatchMode=False)
Parameters.SetDesignPointsOutOfDate()
model6 = system8.GetContainer(ComponentName="Model")
setup5 = system8.GetContainer(ComponentName="Setup")
solution3 = system8.GetContainer(ComponentName="Solution")
results3 = system8.GetContainer(ComponentName="Results")
Parameters.SetRetainedDesignPointDataInvalid(InvalidContainers=[engineeringData1, geometry3, model5, setup4, geometry1, model1, setup1, model6, setup5, solution3, results3])
setupComponent5 = system8.GetComponent(Name="Setup")
solutionComponent3 = system8.GetComponent(Name="Solution")
resultsComponent3 = system8.GetComponent(Name="Results")
MarkComponentsOutOfDateForDps(Components=[setupComponent4, modelComponent7, setupComponent5, solutionComponent3, resultsComponent3])
Parameters.SetPartiallyRetainedDataInvalid(Containers=[setup4, model6, setup5, solution3, results3])
setup4.StartACP(ACPMode="pre")
setup4.StartACP(ACPMode="pre")
setup4.ExitACP(Save=True)
model5.Edit()
Save(Overwrite=True)
setup4.StartACP(ACPMode="pre")
Parameters.SetDesignPointsOutOfDate()
Parameters.SetRetainedDesignPointDataInvalid(InvalidContainers=[engineeringData1, geometry3, model5, setup4, geometry1, model1, setup1, model6, setup5, solution3, results3])
MarkComponentsOutOfDateForDps(Components=[setupComponent4, modelComponent7, setupComponent5, solutionComponent3, resultsComponent3])
Parameters.SetPartiallyRetainedDataInvalid(Containers=[setup4, model6, setup5, solution3, results3])
setup4.ExitACP(Save=True)
setupComponent4.Clean()
setup4.StartACP(ACPMode="pre")
Parameters.SetDesignPointsOutOfDate()
Parameters.SetRetainedDesignPointDataInvalid(InvalidContainers=[engineeringData1, geometry3, model5, setup4, geometry1, model1, setup1, model6, setup5, solution3, results3])
MarkComponentsOutOfDateForDps(Components=[setupComponent4, modelComponent7, setupComponent5, solutionComponent3, resultsComponent3])
Parameters.SetPartiallyRetainedDataInvalid(Containers=[setup4, model6, setup5, solution3, results3])
Save(Overwrite=True)
setup4.ExitACP(Save=True)
modelComponent8.Clean()
model5.Edit()
model5.Exit()
model5.Edit()
model5.Exit()
modelComponent8.Reset()
modelComponent8.Refresh()
model5.Edit()
Save(Overwrite=True)
modelComponent8.Update(AllDependencies=True)
setup4.Refresh(
    KeepACPOpen=True,
    BatchMode=False)
Parameters.SetDesignPointsOutOfDate()
Parameters.SetRetainedDesignPointDataInvalid(InvalidContainers=[engineeringData1, geometry3, model5, setup4, geometry1, model1, setup1, model6, setup5, solution3, results3])
MarkComponentsOutOfDateForDps(Components=[setupComponent4, modelComponent7, setupComponent5, solutionComponent3, resultsComponent3])
Parameters.SetPartiallyRetainedDataInvalid(Containers=[setup4, model6, setup5, solution3, results3])
setup4.StartACP(ACPMode="pre")
Save(Overwrite=True)
setupComponent4.UpdateUpstreamComponents()
setupComponent4.Update(AllDependencies=True)
setup4.StartACP(ACPMode="pre")
Parameters.SetDesignPointsOutOfDate()
Parameters.SetRetainedDesignPointDataInvalid(InvalidContainers=[engineeringData1, geometry3, model5, setup4, geometry1, model1, setup1, model6, setup5, solution3, results3])
MarkComponentsOutOfDateForDps(Components=[setupComponent4, modelComponent7, setupComponent5, solutionComponent3, resultsComponent3])
Parameters.SetPartiallyRetainedDataInvalid(Containers=[setup4, model6, setup5, solution3, results3])
setupComponent4.Update(AllDependencies=True)
template3 = GetTemplate(TemplateName="Mechanical Model")
system10 = template3.CreateSystem(
    Position="Below",
    RelativeTo=system7)
geometryComponent1 = system10.GetComponent(Name="Geometry")
geometryComponent2 = system7.GetComponent(Name="Geometry")
geometryComponent1.ReplaceWithShare(
    TargetSystem=system10,
    ComponentToShare=geometryComponent2,
    SourceSystem=system7)
modelComponent9 = system10.GetComponent(Name="Model")
modelComponent9.Refresh()
model7 = system10.GetContainer(ComponentName="Model")
model7.Edit()
modelComponent9.Update(AllDependencies=True)
modelComponent9.TransferData(TargetComponent=modelComponent7)
modelComponent9.Update(AllDependencies=True)
modelComponent7.Refresh()
model6.Edit()
Save(Overwrite=True)
model6.Exit()
system11 = template2.CreateSystem(
    Position="Below",
    RelativeTo=system7)
engineeringDataComponent5 = system11.GetComponent(Name="Engineering Data")
engineeringDataComponent5.ReplaceWithShare(
    TargetSystem=system11,
    ComponentToShare=engineeringDataComponent4,
    SourceSystem=system1)
Save(Overwrite=True)
geometry4 = system11.GetContainer(ComponentName="Geometry")
geometry4.SetFile(
    FilePath="Z:/Developer/MIT_Rkt_Team/MIT_Rkt_Aurora_Aero/MIT_Rkt_Aurora_Aero/FinCan/finCan_new_2024.11.23.15h23.SLDPRT",
    PlugInName="SOLIDWORKS[368]")
geometry4.SetFile(FilePath="C:/Users/mdn/Desktop/tmp/finCan_new_2024.11.23.15h23.STEP")
geometry4.Edit(IsSpaceClaimGeometry=True)
Save(Overwrite=True)
geometry4.Exit()
model5.Exit()
model6.Edit()
geometry4.SetFile(
    FilePath="Z:/Developer/MIT_Rkt_Team/MIT_Rkt_Aurora_Aero/MIT_Rkt_Aurora_Aero/FinCan/finCan_new_2024.12.04.09h50.SLDPRT",
    PlugInName="SOLIDWORKS[368]")
geometry4.SetFile(FilePath="C:/Users/mdn/Desktop/tmp/finCan_new_2024.12.04.09h50.STEP")
geometry4.Edit(IsSpaceClaimGeometry=True)
setup4.ExitACP(Save=True)
model6.Exit()
model7.Exit()
Save(Overwrite=True)
Save(Overwrite=True)
modelComponent10 = system11.GetComponent(Name="Model")
modelComponent10.Refresh()
model8 = system11.GetContainer(ComponentName="Model")
model8.Edit()
model8.Exit()
Save(Overwrite=True)
model8.Edit()
system12 = template1.CreateSystem(
    Position="Right",
    RelativeTo=system11)
model8.Exit()
setupComponent6 = system11.GetComponent(Name="Setup")
modelComponent11 = system12.GetComponent(Name="Model")
setupComponent6.TransferData(TargetComponent=modelComponent11)
system13 = template3.CreateSystem(
    Position="Below",
    RelativeTo=system11)
engineeringDataComponent6 = system13.GetComponent(Name="Engineering Data")
engineeringDataComponent6.ReplaceWithShare(
    TargetSystem=system13,
    ComponentToShare=engineeringDataComponent5,
    SourceSystem=system11)
modelComponent12 = system13.GetComponent(Name="Model")
modelComponent12.TransferData(TargetComponent=modelComponent11)
geometryComponent3 = system13.GetComponent(Name="Geometry")
geometryComponent4 = system11.GetComponent(Name="Geometry")
geometryComponent3.ReplaceWithShare(
    TargetSystem=system13,
    ComponentToShare=geometryComponent4,
    SourceSystem=system11)
modelComponent10.Refresh()
model8.Edit()
model8.Exit()
favorites1 = EngData.LoadFavoriteItems()
library1 = EngData.OpenLibrary(
    Name="Composite Materials",
    Source="Composite_Materials.xml")
matl1 = engineeringData1.ImportMaterial(
    Name="Resin Epoxy",
    Source="Composite_Materials.xml")
matl1.DisplayName = "EP"
matlProp1 = matl1.GetProperty(Name="Elasticity")
matlProp1.SetVariableProperty(
    VariableName="Young's Modulus",
    Property="Unit",
    Value="psi")
matlProp1.SetData(
    Variables=["Young's Modulus"],
    Values=[["548242.64862006065 [psi]"]])
matlProp2 = matl1.GetProperty(Name="Tensile Yield Strength")
matlProp2.SetVariableProperty(
    VariableName="Tensile Yield Strength",
    Property="Unit",
    Value="psi")
matlProp2.SetData(
    Variables=["Tensile Yield Strength"],
    Values=[["7919.0604800675419 [psi]"]])
matlProp1.SetQualifier(
    Qualifier="Derive from",
    Value="Shear Modulus and Poisson's Ratio")
matlProp1.SetVariableProperty(
    VariableName="Shear Modulus",
    Property="Unit",
    Value="psi")
matlProp1.SetData(
    Variables=["Shear Modulus"],
    Values=[["203052.83282224467 [psi]"]])
matlProp1.SetQualifier(
    Qualifier="Derive from",
    Value="Bulk Modulus and Poisson's Ratio")
matlProp1.SetVariableProperty(
    VariableName="Bulk Modulus",
    Property="Unit",
    Value="psi")
matlProp1.SetData(
    Variables=["Bulk Modulus"],
    Values=[["609158.498466734 [psi]"]])
matlProp1.SetQualifier(
    Qualifier="Derive from",
    Value="Shear Modulus and Young's Modulus")
modelComponent10.Refresh()
model8.Edit()
model8.Exit()
model8.Edit()
Save(Overwrite=True)
modelComponent10.Update(AllDependencies=True)
setup6 = system11.GetContainer(ComponentName="Setup")
setup6.Refresh(
    KeepACPOpen=True,
    BatchMode=False)
model8.Edit()
modelComponent10.Update(AllDependencies=True)
setup6.Refresh(
    KeepACPOpen=True,
    BatchMode=False)
modelComponent10.Update(AllDependencies=True)
setup6.Refresh(
    KeepACPOpen=True,
    BatchMode=False)
model8.Exit()
Save(Overwrite=True)
Save(Overwrite=True)
geometry4.Exit()
modelComponent10.UpdateUpstreamComponents()
modelComponent10.Update(AllDependencies=True)
model8.Edit()
Save(Overwrite=True)
modelComponent10.Update(AllDependencies=True)
setup6.Refresh(
    KeepACPOpen=True,
    BatchMode=False)
ACP.RefreshAPDLMaterial(
    Container=setup6,
    apdlMatFilePath=r"C:\Users\mdn\Desktop\tmp\FinFEA_CDR_Correct_files\dp0\ACP-Pre-2\ACP\material.apdl")
setup6.StartACP(ACPMode="pre")
Save(Overwrite=True)
setup6.ExitACP(Save=True)
EngData.EnableFilter(Enable=False)
matl2 = engineeringData1.ImportMaterial(
    Name="Epoxy E-Glass Wet",
    Source="Composite_Materials.xml")
matl2.DisplayName = "EPf"
matl1.DisplayName = "EPr"
Save(Overwrite=True)
modelComponent10.Update(AllDependencies=True)
setup6.Refresh(
    KeepACPOpen=True,
    BatchMode=False)
setup6.StartACP(ACPMode="pre")
setup6.ExitACP(Save=True)
Save(Overwrite=True)
modelComponent10.Update(AllDependencies=True)
setup6.Refresh(
    KeepACPOpen=True,
    BatchMode=False)
Parameters.SetDesignPointsOutOfDate()
model9 = system13.GetContainer(ComponentName="Model")
model10 = system12.GetContainer(ComponentName="Model")
setup7 = system12.GetContainer(ComponentName="Setup")
solution4 = system12.GetContainer(ComponentName="Solution")
results4 = system12.GetContainer(ComponentName="Results")
Parameters.SetRetainedDesignPointDataInvalid(InvalidContainers=[engineeringData1, geometry3, model5, setup4, geometry4, model8, setup6, model9, geometry1, model1, setup1, model10, setup7, solution4, results4])
setupComponent7 = system12.GetComponent(Name="Setup")
solutionComponent4 = system12.GetComponent(Name="Solution")
resultsComponent4 = system12.GetComponent(Name="Results")
MarkComponentsOutOfDateForDps(Components=[setupComponent6, modelComponent11, setupComponent7, solutionComponent4, resultsComponent4])
Parameters.SetPartiallyRetainedDataInvalid(Containers=[setup6, model10, setup7, solution4, results4])
setup6.StartACP(ACPMode="pre")
setup6.ExitACP(Save=True)
model8.Edit()
Save(Overwrite=True)
modelComponent10.UpdateUpstreamComponents()
model8.Exit()
model8.Edit()
Save(Overwrite=True)
modelComponent10.Update(AllDependencies=True)
setup6.Refresh(
    KeepACPOpen=True,
    BatchMode=False)
Parameters.SetDesignPointsOutOfDate()
Parameters.SetRetainedDesignPointDataInvalid(InvalidContainers=[engineeringData1, geometry3, model5, setup4, geometry4, model8, setup6, model9, geometry1, model1, setup1, model10, setup7, solution4, results4])
MarkComponentsOutOfDateForDps(Components=[setupComponent6, modelComponent11, setupComponent7, solutionComponent4, resultsComponent4])
Parameters.SetPartiallyRetainedDataInvalid(Containers=[setup6, model10, setup7, solution4, results4])
setup6.StartACP(ACPMode="pre")
Save(Overwrite=True)
Save(Overwrite=True)
setupComponent4.Update(AllDependencies=True)
setup4.StartACP(ACPMode="pre")
modelComponent7.Refresh()
model6.Edit()
Save(Overwrite=True)
system14 = template2.CreateSystem(
    Position="Below",
    RelativeTo=system11)
setupComponent6.Update(AllDependencies=True)
modelComponent13 = system14.GetComponent(Name="Model")
setupComponent6.TransferData(TargetComponent=modelComponent13)
modelComponent13.Refresh()
model8.Exit()
modelComponent13.Refresh()
setup4.ExitACP(Save=True)
setup6.ExitACP(Save=True)
Save(Overwrite=True)
model6.Exit()
Save(Overwrite=True)
modelComponent13.Refresh()
model11 = system14.GetContainer(ComponentName="Model")
model11.Edit()
model11.Exit()
system14.Delete()
system15 = template2.CreateSystem(
    Position="Below",
    RelativeTo=system11)
engineeringDataComponent7 = system15.GetComponent(Name="Engineering Data")
engineeringDataComponent7.ReplaceWithShare(
    TargetSystem=system15,
    ComponentToShare=engineeringDataComponent5,
    SourceSystem=system11)
modelComponent14 = system15.GetComponent(Name="Model")
setupComponent6.TransferSpecificData(
    TransferDataName="EnhancedModelData",
    TargetComponent=modelComponent14)
engineeringDataComponent7.DeleteShare(System=system15)
setupComponent6.TransferData(TargetComponent=modelComponent14)
modelComponent12.TransferData(TargetComponent=modelComponent14)
modelComponent12.DeleteTransfer(TargetComponent=modelComponent11)
system12.Delete()
modelComponent12.Refresh()
model9.Edit()
model9.Edit()
model9.Exit()
geometryComponent3.DeleteShare(System=system13)
setup6.StartACP(ACPMode="pre")
Parameters.SetDesignPointsOutOfDate()
geometry5 = system13.GetContainer(ComponentName="Geometry")
engineeringData2 = system15.GetContainer(ComponentName="Engineering Data")
model12 = system15.GetContainer(ComponentName="Model")
setup8 = system15.GetContainer(ComponentName="Setup")
Parameters.SetRetainedDesignPointDataInvalid(InvalidContainers=[engineeringData1, geometry3, model5, setup4, geometry4, model8, setup6, geometry5, model9, geometry1, model1, setup1, engineeringData2, model12, setup8])
setupComponent8 = system15.GetComponent(Name="Setup")
MarkComponentsOutOfDateForDps(Components=[setupComponent6, modelComponent14, setupComponent8])
Parameters.SetPartiallyRetainedDataInvalid(Containers=[setup6, model12, setup8])
setupComponent6.Update(AllDependencies=True)
setup6.ExitACP(Save=True)
setup6.StartACP(ACPMode="pre")
setupComponent6.Update(AllDependencies=True)
geometry5.SetFile(FilePath="C:/Users/mdn/Desktop/tmp/finCan_CoresAndEpoxyFillets.STEP")
modelComponent12.Refresh()
model9.Edit()
model9.Exit()
modelComponent12.Reset()
modelComponent12.Refresh()
model9.Edit()
Save(Overwrite=True)
model9.Exit()
modelComponent12.Update(AllDependencies=True)
modelComponent14.Refresh()
system16 = template3.CreateSystem(
    Position="Below",
    RelativeTo=system13)
engineeringDataComponent8 = system16.GetComponent(Name="Engineering Data")
engineeringDataComponent8.ReplaceWithShare(
    TargetSystem=system16,
    ComponentToShare=engineeringDataComponent5,
    SourceSystem=system11)
geometry6 = system16.GetContainer(ComponentName="Geometry")
geometry6.SetFile(FilePath="C:/Users/mdn/Desktop/tmp/finCan_tubeOnly.STEP")
modelComponent15 = system16.GetComponent(Name="Model")
modelComponent15.Refresh()
model13 = system16.GetContainer(ComponentName="Model")
model13.Edit()
geometry5.Edit(IsSpaceClaimGeometry=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
model13.Exit()
modelComponent15.TransferData(TargetComponent=modelComponent14)
geometry6.Edit(IsSpaceClaimGeometry=True)
modelComponent12.Update(AllDependencies=True)
geometry5.Exit()
setup6.ExitACP(Save=True)
Save(Overwrite=True)
geometry6.Exit()
model9.Edit()
modelComponent15.Refresh()
model13.Edit()
model9.Edit()
schematicSettings1 = GetSchematicSettings()
schematicSettings1.Notes = """Analyse d'une aile (seule)
Single Fin Analysis"""
schematicSettings1.Notes = """CDE: 

Analyse d'une aile (seule)
Single Fin Analysis

F: fin layups
G: finCores + epoxy fillets prep
I: airframe prep
H: combination for G10 fabric layup
J: static struct for full setup"""
schematicSettings1.Notes = """CDE: 

Analyse d'une aile (seule)
Single Fin Analysis

FGHIJ: 

Analyse complete de la fusee
Full analysis of the rocket

F: fin layups
G: finCores + epoxy fillets prep
I: airframe prep
H: combination for G10 fabric layup
J: static struct for full setup"""
model13.Exit()
model9.Exit()
modelComponent12.Update(AllDependencies=True)
modelComponent15.Update(AllDependencies=True)
modelComponent14.Refresh()
modelComponent14.Clean()
modelComponent14.Reset()
modelComponent14.Refresh()
modelComponent14.Refresh()
modelComponent14.Reset()
modelComponent14.Refresh()
model12.Edit()
modelComponent14.Update(AllDependencies=True)
setup8.Refresh(
    KeepACPOpen=True,
    BatchMode=False)
engineeringDataComponent7.ReplaceWithShare(
    TargetSystem=system15,
    ComponentToShare=engineeringDataComponent5,
    SourceSystem=system11)
setup8.Refresh(
    KeepACPOpen=True,
    BatchMode=False)
ACP.RefreshAPDLMaterial(
    Container=setup8,
    apdlMatFilePath=r"C:\Users\mdn\Desktop\tmp\FinFEA_CDR_Correct_files\dp0\ACP-Pre-3\ACP\material.apdl")
setup8.StartACP(ACPMode="pre")
model12.Exit()
setup8.ExitACP(Save=True)
geometry6.SetFile(FilePath="C:/Users/mdn/Desktop/tmp/finCan_tubeOnly.STEP")
geometry6.SetFile(FilePath="C:/Users/mdn/Desktop/tmp/finCan_tubeOnly.STEP")
geometry6.Edit(IsSpaceClaimGeometry=True)
Save(Overwrite=True)
Save(Overwrite=True)
modelComponent15.Refresh()
model13.Edit()
model13.Exit()
modelComponent15.Update(AllDependencies=True)
engineeringDataComponent7.DeleteShare(System=system15)
engineeringDataComponent7.ReplaceWithShare(
    TargetSystem=system15,
    ComponentToShare=engineeringDataComponent6,
    SourceSystem=system13)
modelComponent14.Update(AllDependencies=True)
setup8.Refresh(
    KeepACPOpen=True,
    BatchMode=False)
setup8.StartACP(ACPMode="pre")
setup8.ExitACP(Save=True)
geometry6.Exit()
matlProp3 = matl2.GetProperty(Name="Stress Limits")
matlProp3.SetVariableProperty(
    VariableName="Shear XZ",
    Property="Unit",
    Value="psi")
matlProp3.SetData(
    Variables=["Shear XZ"],
    Values=[["8702.2642638104862 [psi]"]])
matlProp3.SetVariableProperty(
    VariableName="Shear YZ",
    Property="Unit",
    Value="psi")
matlProp3.SetData(
    Variables=["Shear YZ"],
    Values=[["5076.3208205561168 [psi]"]])
matlProp3.SetVariableProperty(
    VariableName="Shear XY",
    Property="Unit",
    Value="psi")
matlProp3.SetData(
    Variables=["Shear XY"],
    Values=[["8702.2642638104862 [psi]"]])
matlProp3.SetVariableProperty(
    VariableName="Compressive Z direction",
    Property="Unit",
    Value="psi")
matlProp3.SetData(
    Variables=["Compressive Z direction"],
    Values=[["-14503.773773017476 [psi]"]])
matlProp3.SetVariableProperty(
    VariableName="Compressive Y direction",
    Property="Unit",
    Value="psi")
matlProp3.SetData(
    Variables=["Compressive Y direction"],
    Values=[["-14503.773773017476 [psi]"]])
matlProp3.SetVariableProperty(
    VariableName="Compressive X direction",
    Property="Unit",
    Value="psi")
matlProp3.SetData(
    Variables=["Compressive X direction"],
    Values=[["-69618.11411048389 [psi]"]])
matlProp3.SetVariableProperty(
    VariableName="Tensile Z direction",
    Property="Unit",
    Value="psi")
matlProp3.SetData(
    Variables=["Tensile Z direction"],
    Values=[["4496.1698696354179 [psi]"]])
matlProp3.SetVariableProperty(
    VariableName="Tensile Y direction",
    Property="Unit",
    Value="psi")
matlProp3.SetData(
    Variables=["Tensile Y direction"],
    Values=[["4496.1698696354179 [psi]"]])
matlProp3.SetVariableProperty(
    VariableName="Tensile X direction",
    Property="Unit",
    Value="psi")
matlProp3.SetData(
    Variables=["Tensile X direction"],
    Values=[["113129.43542953632 [psi]"]])
matlProp4 = matl2.GetProperty(Name="Elasticity")
matlProp4.SetVariableProperty(
    VariableName="Shear Modulus XZ",
    Property="Unit",
    Value="psi")
matlProp4.SetData(
    Variables=["Shear Modulus XZ"],
    Values=[["681677.36733182136 [psi]"]])
matlProp4.SetVariableProperty(
    VariableName="Shear Modulus YZ",
    Property="Unit",
    Value="psi")
matlProp4.SetData(
    Variables=["Shear Modulus YZ"],
    Values=[["507632.08205561165 [psi]"]])
matlProp4.SetVariableProperty(
    VariableName="Shear Modulus XY",
    Property="Unit",
    Value="psi")
matlProp4.SetData(
    Variables=["Shear Modulus XY"],
    Values=[["681677.36733182136 [psi]"]])
matlProp4.SetVariableProperty(
    VariableName="Young's Modulus Z direction",
    Property="Unit",
    Value="psi")
matlProp4.SetData(
    Variables=["Young's Modulus Z direction"],
    Values=[["1305339.6395715729 [psi]"]])
matlProp4.SetVariableProperty(
    VariableName="Young's Modulus Y direction",
    Property="Unit",
    Value="psi")
matlProp4.SetData(
    Variables=["Young's Modulus Y direction"],
    Values=[["1305339.6395715729 [psi]"]])
matlProp4.SetVariableProperty(
    VariableName="Young's Modulus X direction",
    Property="Unit",
    Value="psi")
matlProp4.SetData(
    Variables=["Young's Modulus X direction"],
    Values=[["5076320.8205561163 [psi]"]])
matlProp4.SetData(
    Variables=["Young's Modulus X direction"],
    Values=[["10500000 [psi]"]])
matlProp4.SetData(
    Variables=["Young's Modulus Y direction"],
    Values=[["2404573.0202634186 [psi]"]])
matlProp4.SetData(
    Variables=["Young's Modulus Z direction"],
    Values=[["2404573.0202634186 [psi]"]])
matlProp5 = matl2.GetProperty(Name="Coefficient of Thermal Expansion")
matlProp5.SetData(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Orthotropic"},
    Variables=["Coefficient of Thermal Expansion X direction"],
    Values=[["1.67E-06 [C^-1]"]])
matlProp5.SetData(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Orthotropic"},
    Variables=["Coefficient of Thermal Expansion Y direction"],
    Values=[["1.67E-06 [C^-1]"]])
matlProp5.SetData(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Orthotropic"},
    Variables=["Coefficient of Thermal Expansion Z direction"],
    Values=[["1.67E-06 [C^-1]"]])
matlProp5.SetVariableProperty(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Orthotropic"},
    VariableName="Coefficient of Thermal Expansion Z direction",
    Property="Unit",
    Value="F^-1")
matlProp5.SetData(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Orthotropic"},
    Variables=["Coefficient of Thermal Expansion Z direction"],
    Values=[["9.2777777777777858E-07 [F^-1]"]])
matlProp5.SetData(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Orthotropic"},
    Variables=["Coefficient of Thermal Expansion Z direction"],
    Values=[["3E-06 [F^-1]"]])
matlProp5.SetData(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Orthotropic"},
    Variables=["Coefficient of Thermal Expansion Y direction"],
    Values=[["3E-06 [C^-1]"]])
matlProp5.SetData(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Orthotropic"},
    Variables=["Coefficient of Thermal Expansion X direction"],
    Values=[["3E-06 [C^-1]"]])
matlProp5.SetVariableProperty(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Orthotropic"},
    VariableName="Coefficient of Thermal Expansion Y direction",
    Property="Unit",
    Value="F^-1")
matlProp5.SetData(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Orthotropic"},
    Variables=["Coefficient of Thermal Expansion Y direction"],
    Values=[["1.6666666666666681E-06 [F^-1]"]])
matlProp5.SetVariableProperty(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Orthotropic"},
    VariableName="Coefficient of Thermal Expansion X direction",
    Property="Unit",
    Value="F^-1")
matlProp5.SetData(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Orthotropic"},
    Variables=["Coefficient of Thermal Expansion X direction"],
    Values=[["1.6666666666666681E-06 [F^-1]"]])
matlProp5.SetData(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Orthotropic"},
    Variables=["Coefficient of Thermal Expansion Y direction"],
    Values=[["3E-06 [F^-1]"]])
matlProp5.SetData(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Orthotropic"},
    Variables=["Coefficient of Thermal Expansion X direction"],
    Values=[["3E-06 [F^-1]"]])
Save(Overwrite=True)
geometry6.SetFile(FilePath="C:/Users/mdn/Desktop/tmp/finCan_tubeOnly.STEP")
system17 = template3.CreateSystem(
    Position="Below",
    RelativeTo=system16)
geometry7 = system17.GetContainer(ComponentName="Geometry")
geometry7.SetFile(FilePath="C:/Users/mdn/Desktop/tmp/finCan_withHoles.STEP")
engineeringDataComponent9 = system17.GetComponent(Name="Engineering Data")
engineeringDataComponent9.ReplaceWithShare(
    TargetSystem=system17,
    ComponentToShare=engineeringDataComponent5,
    SourceSystem=system11)
modelComponent16 = system17.GetComponent(Name="Model")
modelComponent16.TransferData(TargetComponent=modelComponent14)
geometry6.Edit(IsSpaceClaimGeometry=True)
Save(Overwrite=True)
geometry6.Exit()
Save(Overwrite=True)
geometry7.Edit(IsSpaceClaimGeometry=True)
Save(Overwrite=True)
geometry7.Exit()
modelComponent16.Refresh()
model14 = system17.GetContainer(ComponentName="Model")
model14.Edit()
modelComponent15.Refresh()
model14.Exit()
modelComponent15.Refresh()
model13.Edit()
model13.Exit()
modelComponent15.Update(AllDependencies=True)
modelComponent16.Update(AllDependencies=True)
modelComponent14.Update(AllDependencies=True)
model12.Edit()
modelComponent14.Update(AllDependencies=True)
Save(Overwrite=True)
